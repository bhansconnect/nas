---
- name: "Ensure photoprism dataset exists"
  community.general.zfs:
    name: "{{ photoprism_dataset }}"
    state: present

- name: "Ensure photoprism dir has correct permissions"
  file:
    path: "{{ photoprism_dir }}"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: u=rwx,g=rwx,o=rx

- name: "Ensure photoprism/storage dataset exists"
  community.general.zfs:
    name: "{{ photoprism_dataset }}/storage"
    state: present

- name: "Ensure photoprism/storage dir has correct permissions"
  file:
    path: "{{ photoprism_dir }}/storage"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: u=rwx,g=rwx,o=rx

- name: "Ensure photoprism/mariadb dataset exists"
  community.general.zfs:
    name: "{{ photoprism_dataset }}/mariadb"
    state: present

- name: "Ensure photoprism/mariadb dir has correct permissions"
  file:
    path: "{{ photoprism_dir }}/mariadb"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: u=rwx,g=rwx,o=rx

- name: photoprism-mariadb
  docker_container:
    name: photoprism-mariadb
    image: mariadb:11
    security_opts: # see https://github.com/MariaDB/mariadb-docker/issues/434#issuecomment-1136151239
      - seccomp:unconfined
      - apparmor:unconfined
    ports:
      - 3306:3306
    networks:
      - name: "traefik"
    command: --innodb-buffer-pool-size=512M --transaction-isolation=READ-COMMITTED --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --max-connections=512 --innodb-rollback-on-timeout=OFF --innodb-lock-wait-timeout=120
    ## Never store database files on an unreliable device such as a USB flash drive, an SD card, or a shared network folder:
    volumes:
      - "{{ photoprism_dir }}/mariadb:/var/lib/mysql" # DO NOT REMOVE
    env:
      MARIADB_AUTO_UPGRADE: "1"
      MARIADB_INITDB_SKIP_TZINFO: "1"
      # This is not exposed to the internet. Insecure password is fine.
      MARIADB_DATABASE: "photoprism"
      MARIADB_USER: "photoprism"
      MARIADB_PASSWORD: "{{ photoprism_mariadb_password }}"
      MARIADB_ROOT_PASSWORD: "{{ photoprism_mariadb_password }}"
    labels:
      traefik.enable: "false"
      traefik.docker.network: "traefik"

- name: photoprism
  docker_container:
    name: photoprism
    image: photoprism/photoprism:latest
    pull: true
    volumes:
      - "{{ photoprism_dir }}/storage:/photoprism/storage:rw"
      - "{{ pictures_dir }}:/photoprism/originals:rw"
    ports:
      - 2342:2342
    env:
      TZ: "{{ nas_timezone }}"
      # TODO fix this. I want the ids of the ansible_user
      PUID: "1000"
      PGID: "1000"
      # Originally was public and behind authelia.
      # Instead, is nicer to have fully exposed api with a password.
      # PHOTOPRISM_AUTH_MODE: "public"               # authentication mode (public, password)
      PHOTOPRISM_AUTH_MODE: "password"               # authentication mode (public, password)
      PHOTOPRISM_ADMIN_USER: "admin"                 # admin login username
      PHOTOPRISM_ADMIN_PASSWORD: "{{ photoprism_password }}"          # initial admin password (8-72 characters)
      PHOTOPRISM_SITE_URL: "https://photoprism.{{ nas_domain }}"  # server URL in the format "http(s)://domain.name(:port)/(path)"
      PHOTOPRISM_DISABLE_TLS: "true"                # disables HTTPS/TLS even if the site URL starts with https:// and a certificate is available
      PHOTOPRISM_DEFAULT_TLS: "false"                 # defaults to a self-signed HTTPS/TLS certificate if no other certificate is available
      PHOTOPRISM_ORIGINALS_LIMIT: "5000"               # file size limit for originals in MB (increase for high-res video)
      PHOTOPRISM_HTTP_COMPRESSION: "gzip"            # improves transfer speed and bandwidth utilization (none or gzip)
      PHOTOPRISM_LOG_LEVEL: "info"                   # log level: trace, debug, info, warning, error, fatal, or panic
      PHOTOPRISM_READONLY: "false"                   # do not modify originals directory (reduced functionality)
      PHOTOPRISM_EXPERIMENTAL: "false"               # enables experimental features
      PHOTOPRISM_DISABLE_CHOWN: "false"              # disables updating storage permissions via chmod and chown on startup
      PHOTOPRISM_DISABLE_WEBDAV: "false"             # disables built-in WebDAV server
      PHOTOPRISM_DISABLE_SETTINGS: "false"           # disables settings UI and API
      PHOTOPRISM_DISABLE_TENSORFLOW: "false"         # disables all features depending on TensorFlow
      PHOTOPRISM_DISABLE_FACES: "false"              # disables face detection and recognition (requires TensorFlow)
      PHOTOPRISM_DISABLE_CLASSIFICATION: "false"     # disables image classification (requires TensorFlow)
      PHOTOPRISM_DISABLE_VECTORS: "false"            # disables vector graphics support
      PHOTOPRISM_DISABLE_RAW: "false"                # disables indexing and conversion of RAW images
      PHOTOPRISM_RAW_PRESETS: "false"                # enables applying user presets when converting RAW images (reduces performance)
      PHOTOPRISM_SIDECAR_YAML: "true"                # creates YAML sidecar files to back up picture metadata
      PHOTOPRISM_BACKUP_ALBUMS: "true"               # creates YAML files to back up album metadata
      PHOTOPRISM_BACKUP_DATABASE: "true"             # creates regular backups based on the configured schedule
      PHOTOPRISM_BACKUP_SCHEDULE: "daily"            # backup SCHEDULE in cron format (e.g. "0 12 * * *" for daily at noon) or at a random time (daily, weekly)
      PHOTOPRISM_INDEX_SCHEDULE: ""                  # indexing SCHEDULE in cron format (e.g. "@every 3h" for every 3 hours; "" to disable)
      PHOTOPRISM_AUTO_INDEX: "300"                    # delay before automatically indexing files in SECONDS when uploading via WebDAV (-1 to disable)
      PHOTOPRISM_AUTO_IMPORT: "-1"                     # delay before automatically importing files in SECONDS when uploading via WebDAV (-1 to disable)
      PHOTOPRISM_DETECT_NSFW: "false"                # automatically flags photos as private that MAY be offensive (requires TensorFlow)
      PHOTOPRISM_UPLOAD_NSFW: "true"                 # allows uploads that MAY be offensive (no effect without TensorFlow)
      # PHOTOPRISM_DATABASE_DRIVER: "sqlite"         # SQLite is an embedded database that does not require a separate database server
      PHOTOPRISM_DATABASE_DRIVER: "mysql"            # MariaDB 10.5.12+ (MySQL successor) offers significantly better performance compared to SQLite
      PHOTOPRISM_DATABASE_SERVER: "photoprism-mariadb:3306"     # MariaDB database server (hostname:port)
      PHOTOPRISM_DATABASE_NAME: "photoprism"         # MariaDB database schema name
      PHOTOPRISM_DATABASE_USER: "photoprism"         # MariaDB database user name
      PHOTOPRISM_DATABASE_PASSWORD: "{{ photoprism_mariadb_password }}"       # MariaDB database user password
      PHOTOPRISM_SITE_CAPTION: "Photos"
      PHOTOPRISM_SITE_DESCRIPTION: ""                # meta site description
      PHOTOPRISM_SITE_AUTHOR: ""                     # meta site author
      ## Video Transcoding (https://docs.photoprism.app/getting-started/advanced/transcoding/):
      # PHOTOPRISM_FFMPEG_ENCODER: "software"        # H.264/AVC encoder (software, intel, nvidia, apple, raspberry, or vaapi)
      # PHOTOPRISM_FFMPEG_SIZE: "1920"               # video size limit in pixels (720-7680) (default: 3840)
      # PHOTOPRISM_FFMPEG_BITRATE: "32"              # video bitrate limit in Mbit/s (default: 50)
      ## Run/install on first startup (options: update https gpu ffmpeg tensorflow davfs clitools clean):
      # PHOTOPRISM_INIT: "https gpu tensorflow"
      ## Run as a non-root user after initialization (supported: 0, 33, 50-99, 500-600, and 900-1200):
      # PHOTOPRISM_UID: 1000
      # PHOTOPRISM_GID: 1000
      # PHOTOPRISM_UMASK: 0000
    networks:
      - name: "traefik"
    security_opts:
      - seccomp:unconfined
      - apparmor:unconfined
    working_dir: "/photoprism" # do not change or remove
    restart_policy: unless-stopped
    labels:
      traefik.enable: "true"
      traefik.docker.network: "traefik"
      traefik.http.routers.photoprism.rule: "Host(`photoprism.{{ nas_domain }}`)"
      # traefik.http.routers.photoprism.middlewares: "authelia@docker"
      traefik.http.routers.photoprism.entrypoints: "websecure"
      traefik.http.routers.photoprism.tls.certresolver: "letsencrypt"
      traefik.http.routers.photoprism.service: "photoprism"
      traefik.http.services.photoprism.loadbalancer.server.port: "2342"
      traefik.http.services.photoprism.loadbalancer.passHostHeader: "true"
      # Redirect from main url
      traefik.http.routers.gotophotoprism.rule: "Host(`{{ nas_domain }}`)"
      traefik.http.routers.gotophotoprism.middlewares: "gotophotoprism"
      traefik.http.routers.gotophotoprism.entrypoints: "websecure"
      traefik.http.routers.gotophotoprism.service: "noop@internal"
      traefik.http.routers.gotophotoprism.tls.certresolver: "letsencrypt"
      traefik.http.middlewares.gotophotoprism.redirectregex.regex: "^https://(.*){{ nas_domain }}/(.*)"
      traefik.http.middlewares.gotophotoprism.redirectregex.replacement: "https://photoprism.{{ nas_domain }}/${2}"
      traefik.http.middlewares.gotophotoprism.redirectregex.permanent: "true"
