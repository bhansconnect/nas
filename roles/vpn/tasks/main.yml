---
- name: "Ensure vpn dataset exists"
  community.general.zfs:
    name: "{{ vpn_dataset }}"
    state: present

- name: "Ensure vpn dir has correct permissions"
  file:
    path: "{{ vpn_dir }}"
    owner: "root"
    group: "root"
    mode: u=rwx,g=,o=

- name: Set vpn configs
  template:
    src: wg.j2.conf
    dest: "{{ vpn_dir }}/wg0.conf"
    owner: "root"
    group: "root"
    mode: u=rw,g=,o=
  vars:
    server: "{{ vpn_servers[0] }}"
  notify: restart vpn

- name: vpn
  docker_container:
    name: vpn
    image: linuxserver/wireguard
    pull: true
    volumes:
      - "{{ vpn_dir }}/wg0.conf:/config/wg0.conf"
    capabilities:
      - NET_ADMIN
      - SYS_MODULE
    env:
      TZ: "{{ nas_timezone }}"
    networks:
      - name: "traefik"
    sysctls:
      net.ipv4.conf.all.src_valid_mark: "1"
      net.ipv6.conf.all.disable_ipv6: "1"
    restart_policy: unless-stopped
    labels:
      # These are traefik routing for services using this VPN.
      traefik.enable: "true"
      # Sonarr
      traefik.http.routers.sonarr.rule: "Host(`sonarr.{{ nas_domain }}`)"
      traefik.http.routers.sonarr.middlewares: "authelia@docker"
      traefik.http.routers.sonarr.entrypoints: "websecure"
      traefik.http.routers.sonarr.tls.certresolver: "letsencrypt"
      traefik.http.routers.sonarr.service: "sonarr"
      traefik.http.services.sonarr.loadbalancer.server.port: "8989"
      # Radarr
      traefik.http.routers.radarr.rule: "Host(`radarr.{{ nas_domain }}`)"
      traefik.http.routers.radarr.middlewares: "authelia@docker"
      traefik.http.routers.radarr.entrypoints: "websecure"
      traefik.http.routers.radarr.tls.certresolver: "letsencrypt"
      traefik.http.routers.radarr.service: "radarr"
      traefik.http.services.radarr.loadbalancer.server.port: "7878"
      # Prowlarr
      traefik.http.routers.prowlarr.rule: "Host(`prowlarr.{{ nas_domain }}`)"
      traefik.http.routers.prowlarr.middlewares: "authelia@docker"
      traefik.http.routers.prowlarr.entrypoints: "websecure"
      traefik.http.routers.prowlarr.tls.certresolver: "letsencrypt"
      traefik.http.routers.prowlarr.service: "prowlarr"
      traefik.http.services.prowlarr.loadbalancer.server.port: "9696"
      # Bazarr
      traefik.http.routers.bazarr.rule: "Host(`bazarr.{{ nas_domain }}`)"
      traefik.http.routers.bazarr.middlewares: "authelia@docker"
      traefik.http.routers.bazarr.entrypoints: "websecure"
      traefik.http.routers.bazarr.tls.certresolver: "letsencrypt"
      traefik.http.routers.bazarr.service: "bazarr"
      traefik.http.services.bazarr.loadbalancer.server.port: "6767"
      # Transmission
      traefik.http.routers.transmission.rule: "Host(`torrent.{{ nas_domain }}`)"
      traefik.http.routers.transmission.middlewares: "authelia@docker"
      traefik.http.routers.transmission.entrypoints: "websecure"
      traefik.http.routers.transmission.tls.certresolver: "letsencrypt"
      traefik.http.routers.transmission.service: "transmission"
      traefik.http.services.transmission.loadbalancer.server.port: "9091"
