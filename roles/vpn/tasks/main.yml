---
- name: vpn
  docker_container:
    name: vpn
    image: qmcgaw/gluetun
    pull: true
    capabilities:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    env:
      TZ: "{{ nas_timezone }}"
      VPN_SERVICE_PROVIDER: "mullvad"
      VPN_TYPE: "wireguard"
      WIREGUARD_PRIVATE_KEY: "{{ vpn_private_key }}"
      WIREGUARD_ADDRESSES: "{{ vpn_address }}"
      SERVER_COUNTRIES: "Spain"
    networks:
      - name: "traefik"
    sysctls:
      net.ipv6.conf.all.disable_ipv6: "1"
    restart_policy: unless-stopped
    labels:
      # These are traefik routing for services using this VPN.
      traefik.enable: "true"
      # Sonarr
      traefik.http.routers.sonarr.rule: "Host(`sonarr.{{ nas_domain }}`)"
      traefik.http.routers.sonarr.middlewares: "authelia@docker"
      traefik.http.routers.sonarr.entrypoints: "websecure"
      traefik.http.routers.sonarr.tls.certresolver: "letsencrypt"
      traefik.http.routers.sonarr.service: "sonarr"
      traefik.http.services.sonarr.loadbalancer.server.port: "8989"
      # Radarr
      traefik.http.routers.radarr.rule: "Host(`radarr.{{ nas_domain }}`)"
      traefik.http.routers.radarr.middlewares: "authelia@docker"
      traefik.http.routers.radarr.entrypoints: "websecure"
      traefik.http.routers.radarr.tls.certresolver: "letsencrypt"
      traefik.http.routers.radarr.service: "radarr"
      traefik.http.services.radarr.loadbalancer.server.port: "7878"
      # Prowlarr
      traefik.http.routers.prowlarr.rule: "Host(`prowlarr.{{ nas_domain }}`)"
      traefik.http.routers.prowlarr.middlewares: "authelia@docker"
      traefik.http.routers.prowlarr.entrypoints: "websecure"
      traefik.http.routers.prowlarr.tls.certresolver: "letsencrypt"
      traefik.http.routers.prowlarr.service: "prowlarr"
      traefik.http.services.prowlarr.loadbalancer.server.port: "9696"
      # Bazarr
      traefik.http.routers.bazarr.rule: "Host(`bazarr.{{ nas_domain }}`)"
      traefik.http.routers.bazarr.middlewares: "authelia@docker"
      traefik.http.routers.bazarr.entrypoints: "websecure"
      traefik.http.routers.bazarr.tls.certresolver: "letsencrypt"
      traefik.http.routers.bazarr.service: "bazarr"
      traefik.http.services.bazarr.loadbalancer.server.port: "6767"
      # Transmission
      traefik.http.routers.transmission.rule: "Host(`torrent.{{ nas_domain }}`)"
      traefik.http.routers.transmission.middlewares: "authelia@docker"
      traefik.http.routers.transmission.entrypoints: "websecure"
      traefik.http.routers.transmission.tls.certresolver: "letsencrypt"
      traefik.http.routers.transmission.service: "transmission"
      traefik.http.services.transmission.loadbalancer.server.port: "9091"
      # Uptime
      traefik.http.routers.uptime-kuma.rule: "Host(`uptime.{{ nas_domain }}`)"
      traefik.http.routers.uptime-kuma.middlewares: "authelia@docker"
      traefik.http.routers.uptime-kuma.entrypoints: "websecure"
      traefik.http.routers.uptime-kuma.tls.certresolver: "letsencrypt"
      traefik.http.routers.uptime-kuma.service: "uptime-kuma"
      traefik.http.services.uptime-kuma.loadbalancer.server.port: "3001"
  notify:
    - restart transmission
    - restart prowlarr
    - restart sonarr
    - restart radarr
    - restart bazarr
    - restart uptime-kuma
